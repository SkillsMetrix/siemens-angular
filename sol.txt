import { Component, OnInit, viewChild, ViewChild } from '@angular/core';
import { MatDialog } from '@angular/material/dialog';
import { EmpAddComponent } from './components/emp-add/emp-add.component';
import { EmpService } from './shared/emp.service';
import { MatPaginator } from '@angular/material/paginator'
import { MatTableDataSource } from '@angular/material/table';
import { MatSort } from '@angular/material/sort';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrl: './app.component.css'
})
export class AppComponent implements OnInit{
  displayedColumns: string[]=[
    'id','uname','email','doj','industry','gender','action'
  ]
  dataSource!: MatTableDataSource<any>
  @ViewChild(MatPaginator) paginator!: MatPaginator
  @ViewChild(MatSort) sort!: MatSort

 constructor(private dialog:MatDialog,private ds: EmpService){}
  openAddEditForm(){
  this.dialog.open(EmpAddComponent)
 }
 ngOnInit(): void {
     this.getEMpLIst()
 }
 getEMpLIst(){
  this.ds.loadUsers().subscribe((data:any)=>{
    this.dataSource= new MatTableDataSource(data)
    this.dataSource.sort=this.sort
    this.dataSource.paginator=this.paginator
    
    
   })
 }
 deleteUser(id:number){
this.ds.deleteUser(id).subscribe({
  next:(res)=>{
    alert('user deleted...!')
    this.getEMpLIst()
  },
  error: console.log,
  
})
 }
 applyFilter(event:Event){
  const filterValue=(event.target as HTMLInputElement).value
  this.dataSource.filter=filterValue.trim().toLowerCase()

  if(this.dataSource.paginator){
    this.dataSource.paginator.firstPage()
  }
 }
}
----


<mat-toolbar>

  <span>Angular CRUD App</span>
  <span class="example-spacer"></span>
  <button mat-raised-button (click)="openAddEditForm()">ADD User</button>
</mat-toolbar>

<hr>
<div class="main-body">

<mat-form-field>
  <mat-label>Filter</mat-label>
  <input matInput type="text" (keyup)="applyFilter($event)" placeholder="Search Here" #input>
</mat-form-field>


<div class="table-container">
<table mat-table [dataSource]="dataSource">

    <!-- Position Column -->
    <ng-container matColumnDef="id">
      <th mat-header-cell *matHeaderCellDef> ID </th>
      <td mat-cell *matCellDef="let row"> {{row.id}} </td>
    </ng-container>

    <!-- Name Column -->
    <ng-container matColumnDef="uname">
      <th mat-header-cell *matHeaderCellDef> UserName </th>
      <td mat-cell *matCellDef="let row"> {{row.uname}} </td>
    </ng-container>

    <!-- Weight Column -->
    <ng-container matColumnDef="email">
      <th mat-header-cell *matHeaderCellDef> Email </th>
      <td mat-cell *matCellDef="let row"> {{row.email}} </td>
    </ng-container>

    <ng-container matColumnDef="doj">
      <th mat-header-cell *matHeaderCellDef> DOJ </th>
      <td mat-cell *matCellDef="let row"> {{row.doj | date }} </td>
    </ng-container>
    
    <ng-container matColumnDef="gender">
      <th mat-header-cell *matHeaderCellDef> Gender </th>
      <td mat-cell *matCellDef="let row"> {{row.gender}} </td>
    </ng-container>

    <ng-container matColumnDef="industry">
      <th mat-header-cell *matHeaderCellDef> Industry </th>
      <td mat-cell *matCellDef="let row"> {{row.industry}} </td>
    </ng-container>


    <ng-container matColumnDef="action">
      <th mat-header-cell *matHeaderCellDef> Action </th>
      <td mat-cell *matCellDef="let row"> 
        <button mat-icon-button color="primary">
          <mat-icon>edit</mat-icon>
        </button>
        <button mat-icon-button color="warn" (click)="deleteUser(row.id)">
          <mat-icon>delete</mat-icon>
        </button>

      </td>
    </ng-container>

    <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>
    <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>
  </table>

  <mat-paginator [pageSizeOptions]="[5, 10, 20]"
                 showFirstLastButtons
                 aria-label="Select page of periodic elements">
  </mat-paginator>
</div>



