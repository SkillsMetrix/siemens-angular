import { Component } from '@angular/core';
import { FormControl, FormGroup, Validators } from '@angular/forms';

@Component({
  selector: 'app-reactive',
  templateUrl: './reactive.component.html',
  styleUrl: './reactive.component.css'
})
export class ReactiveComponent {
  myForm: FormGroup
  uname: FormControl
  pass: FormControl
  email: FormControl
  city: FormControl

  createFormControl() {
    this.uname = new FormControl('', Validators.required)
    this.pass = new FormControl('')
    this.email = new FormControl('', [Validators.required, this.emailDomainValidator])
    this.city = new FormControl('')

  }
  createForm() {
    this.myForm = new FormGroup({
      uname: this.uname,
      pass: this.pass,
      email: this.email,
      city: this.city
    })

  }
  constructor() {
    this.createFormControl()
    this.createForm()
  }
  addUser() {
    console.log(this.myForm.value);

  }
  emailDomainValidator(control: FormControl) {
    let email = control.value
    if (email && email.indexOf('@') != -1) {
      let [before, after] = email.split('@')
      if (after !=='siemens.com') {
        return {
          emailDomain: {
            parseDomain: after
          }
        }
      }
    }
    return null

  }
}
----


<div class="container">
    <div class="card">
        <div class="card-header">
         User Registration Form
        </div>
        <div class="card-body">
            <form (ngSubmit)="addUser()" [formGroup]="myForm">
                UserName:<input type="text" formControlName="uname"/>
                <div *ngIf="uname.invalid &&(uname.dirty || uname.touched)"><h6>Username cant be blank</h6></div>

                Password:<input type="password" formControlName="pass"/>
                Email:<input type="email" formControlName="email"/>

                <div *ngIf="email.invalid && (email.dirty || email.touched)">
                    <div *ngIf="email.errors?.['required']"><h6> Email cant be blank</h6></div>
                    <div *ngIf="email.errors?.['emailDomain']"><h6>Email Must be formated</h6> </div>

                </div>
               
                City:<input type="text" formControlName="city"/>
                <button [disabled]="myForm.invalid">Register</button>
            </form>
        </div>
      </div>
</div>
